name: Create Cluster

on: pull_request

jobs:
  test-loadbalancer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.1.0
      - name: Install loadbalancer
        run: helm install -f test/values.yaml test-lb chart --namespace metallb-system --create-namespace
      - name: Deploy nginx
        run: kubectl apply -f test/nginx-test.yaml
      - name: Sleep for 30 seconds
        uses: juliangruber/sleep-action@v1
        with:
          time: 30s
      - name: Get svc
        run: kubectl get svc
      - name: curl nginx 
        run: curl http://172.18.0.10
      - name: Get status
        run: echo LB_STATUS=$(kubectl get svc my-nginx-test -o json | jq '.status.loadBalanceringress[0].ip') >> $GITHUB_ENV
      - name: echo
        run: echo ${env.LB_STATUS}
      - name: Test LoadBalancer has ip 
        if: ${env.LB_STATUS != 172.18.0.10}
        run: exit 1

  test-no-loadbalancer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.1.0
      - name: Get nodes
        run: kubectl get nodes
      - name: Deploy nginx
        run: kubectl apply -f test/nginx-test.yaml
      - name: Sleep for 30 seconds
        uses: juliangruber/sleep-action@v1
        with:
          time: 30s
      - name: Get svc
        run: kubectl get svc
      - name: Get status
        run: echo LB_STATUS=$(kubectl get svc my-nginx-test -o json | jq '.status.loadBalancer') >> $GITHUB_ENV 
      - name: echo
        run: echo ${env.LB_STATUS}
      - name: Test LoadBalancer object is empty
        if: ${env.LB_STATUS == "{}" }
        run: exit 1

    